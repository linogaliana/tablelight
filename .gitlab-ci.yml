image: registry.gitlab.com/linogaliana/texlightci

stages:
  - build
  - test
  - deploy
  - check



before_script:
   - Rscript -e "devtools::install_deps(dependencies = TRUE, upgrade = 'never')"


variables:
  _R_CHECK_CRAN_INCOMING_: "FALSE"
  _R_CHECK_CRAN_INCOMING_: "FALSE"
  _R_CHECK_FORCE_SUGGESTS_: "FALSE"
  _R_CHECK_CRAN_INCOMING_USE_ASPELL_: "TRUE"
  CXX1X: "g++"
  CXX1XSTD: "-std=c++0x"
  CFLAGS: "-Wall -pedantic -fdiagnostics-color=always"
  CXXFLAGS: "-Wall -pedantic -fdiagnostics-color=always"
  CXX11FLAGS: "-Wall -pedantic -fdiagnostics-color=always"




building:
  stage: build
  script:
    - R -e "remotes::install_deps(dependencies = TRUE)"
    - R -e 'devtools::build()'

# To have the coverage percentage appear as a gitlab badge follow these
# instructions:
# https://docs.gitlab.com/ee/user/project/pipelines/settings.html#test-coverage-parsing
# The coverage parsing string is
# Coverage: \d+\.\d+

testing:
    stage: test
    allow_failure: true
    when: on_success
    only:
        - master
    script:
        - Rscript -e 'install.packages("DT")'
        - Rscript -e 'covr::gitlab(quiet = FALSE)'
    artifacts:
        paths:
            - public

# To produce a code coverage report as a GitLab page see
# https://about.gitlab.com/2016/11/03/publish-code-coverage-report-with-gitlab-pages/

pages:
    stage: deploy
    dependencies:
        - testing
    script:
        - ls
    artifacts:
        paths:
            - public
        expire_in: 30 days
    only:
        - master


checking:
    stage: check
    allow_failure: true
    script:
        - Rscript -e 'devtools::check(".")'
